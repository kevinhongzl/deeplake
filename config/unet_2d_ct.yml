device: cuda
dev: False
deterministic: False

ct_data:
    class_path: lib.datasets.smat.SmatCtDataset
    init_args:
        in_use: True
        root_dir: C:/Users/User/Desktop/TSM_Project/data/smat/CT
        num_classes: 4
        train_background_classes: [0]
        test_background_classes: [0]
        train_transform: lib.datasets.smat_default_transform.ct_transform
        test_transform: lib.datasets.smat_default_transform.ct_transform
        holdout_ratio: 0.1  
        cache_rate: 1
        num_workers: 2
        train_batch_size: 1
        return_dataloader: True
        dev: ${dev}

mr_data:
    class_path: lib.datasets.smat.SmatMrDataset
    init_args:
        in_use: False
        # sequence: null
        # root_dir: C:/Users/User/Desktop/TSM_Project/data/smat/MR
        # num_classes: 4
        # train_background_classes: [0]
        # test_background_classes: [0]
        # train_transform: lib.datasets.smat_default_transform.mr_transform
        # test_transform: lib.datasets.smat_default_transform.mr_transform
        # holdout_ratio: 0.1  
        # cache_rate: 1
        # num_workers: 2
        # train_batch_size: 1
        # return_dataloader: True
        # dev: ${dev}

module:
    class_path: modules.segmentation.SegmentationModule
    init_args:
        net: 
            class_path: monai.networks.nets.BasicUNet
            init_args: 
                spatial_dims: 2
                in_channels: 1
                out_channels: 4
        criterion: 
            class_path: monai.losses.DiceLoss
            init_args:
                to_onehot_y: True
                softmax: True
        optimizer: AdamW
        lr: 0.01
        roi_size: [512, 512]
        sw_batch_size: 1
        pretrained: null
        device: ${device}

updater:
    class_path: modules.segmentation.SegmentationUpdater

trainer:
    class_path: modules.segmentation.SegmentationTrainer
    init_args:
        max_iter: 10000
        eval_step: 20
        metric:
            class_path: monai.metrics.DiceMetric
            init_args:
                include_background: True
                reduction: mean
                get_not_nans: False
        checkpoint_dir: ./checkpoints/
        device: ${device}
        dev: ${dev}

evaluator:
    class_path: modules.base_validator.BaseValidator
    init_args:
        metric:
            class_path: monai.metrics.DiceMetric
            init_args:
                include_background: True
                reduction: mean
                get_not_nans: False
        device: ${device}